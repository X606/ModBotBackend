//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModBotBackend.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ModBotBackend.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // General
        ///function Post(url, data) {
        ///	var xhr = new XMLHttpRequest();
        ///	xhr.open(&quot;POST&quot;, url, true);
        ///	xhr.setRequestHeader(&apos;Content-Type&apos;, &apos;application/json&apos;);
        ///	xhr.send(JSON.stringify(data));
        ///
        ///	return new Promise(resolve =&gt; {
        ///		xhr.onload = function () {
        ///			resolve(xhr.responseText);
        ///		}
        ///	});	
        ///}
        ///function PostRaw(url, data) {
        ///	var xhr = new XMLHttpRequest();
        ///	xhr.open(&quot;POST&quot;, url, true);
        ///	xhr.setRequestHeader(&apos;Content-Type&apos;, &apos;application/json&apos;);
        ///	xhr.send(data);
        ///
        ///	return new Promise(resol [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string APITemplate {
            get {
                return ResourceManager.GetString("APITemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;head&gt;
        ///	&lt;meta charset=&quot;UTF-8&quot;&gt;
        ///	&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///	&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;
        ///
        ///	&lt;style&gt;
        ///		.input {
        ///			position: fixed;
        ///			left: 0px;
        ///			right: 0px;
        ///			bottom: 0px;
        ///			height: 40px;
        ///			padding: 0.2em;
        ///			font-size: 2em;
        ///		}
        ///		.console {
        ///			position: fixed;
        ///			bottom: 50px;
        ///			left: 10px;
        ///			right: 0px;
        ///			top: 10px;
        ///			overflow-y: scroll;
        ///		}
        ///		{0}
        ///	&lt;/style&gt;
        ///	&lt;script&gt;
        ///		var API;
        ///		var websocket;
        ///
        ///		wi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Console {
            get {
                return ResourceManager.GetString("Console", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;head&gt;
        ///	&lt;style&gt;
        ///		body {
        ///			background-color: #121212;
        ///			color: white;
        ///			font-family: Arial, Helvetica, sans-serif;
        ///		}
        ///
        ///		.console {
        ///			position: fixed;
        ///			bottom: 50px;
        ///			left: 10px;
        ///			right: 10px;
        ///			top: 10px;
        ///			overflow-y: scroll;
        ///		}
        ///
        ///		.input {
        ///			position: fixed;
        ///			left: 0px;
        ///			right: 0px;
        ///			bottom: 0px;
        ///			height: 40px;
        ///			background-color: #222222;
        ///			padding: 0.2em;
        ///			font-size: 2em;
        ///		}
        ///	&lt;/style&gt;
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///	&lt;p id=&quot;console&quot; class=&quot;console&quot;&gt;Sorry, you do [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConsoleCantAccess {
            get {
                return ResourceManager.GetString("ConsoleCantAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body {
        ///	background-color: #121212;
        ///	color: white;
        ///	font-family: Arial, Helvetica, sans-serif;
        ///}
        ///
        ///a {
        ///	color: #d55ca6;
        ///}
        ///
        ///.input {
        ///	background-color: #222222;
        ///}.
        /// </summary>
        internal static string ConsoleDefaultCss {
            get {
                return ResourceManager.GetString("ConsoleDefaultCss", resourceCulture);
            }
        }
    }
}
